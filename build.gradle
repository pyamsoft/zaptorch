/*
 * Copyright (C) 2018 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    kotlin_version = '1.2.21'
    plugin_version = '3.0.1'
  }
  repositories {
    jcenter()
    google()

    maven {
      url "https://plugins.gradle.org/m2/"
    }

    maven {
      url "https://maven.google.com"
    }

    maven {
      url 'https://jitpack.io'
    }
  }

  ext {

    minSdk = 21
    maxSdk = 27

    supportLib = "27.0.2"
    firebase = "11.8.0"
    leakCanary = "1.5.4"
    pydroid = "16.3.6"
    ktlint = "3.0.0"
  }

  dependencies {
    classpath "com.android.tools.build:gradle:$plugin_version"

    // Dex count
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.1'

    // Gradle version checker
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'

    // Google services
    classpath 'com.google.gms:google-services:3.2.0'

    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    classpath "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:$ktlint"
  }
}

subprojects {
  apply plugin: "org.jlleitschuh.gradle.ktlint"
  apply plugin: "com.github.ben-manes.versions"

  ktlint {
    version = "0.16.1"
    android = true
  }
}

allprojects {
  repositories {
    jcenter()
    google()

    maven {
      url "https://maven.google.com"
    }

    maven {
      url 'https://jitpack.io'
    }
  }

  tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
    options.deprecation = true
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
