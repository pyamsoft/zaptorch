/*
 * Copyright 2019 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.


buildscript {
	ext {
		kotlin_version = '1.3.72'
	}
	repositories {
		google()
		mavenCentral()
		jcenter()
		mavenLocal()

		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	ext {

		minSdk = 23
		maxSdk = 29

		// AndroidX
		preference = "1.1.1"

		pydroid = "21.3.1"
		leakCanary = "2.4"
		dagger = "2.28.1"
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:4.0.0'

		// Gradle version checker
		classpath 'com.github.ben-manes:gradle-versions-plugin:0.22.0'

		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

		// Spotless
		classpath "com.diffplug.spotless:spotless-plugin-gradle:4.4.0"
	}
}

allprojects {
	apply plugin: "com.github.ben-manes.versions"
	apply plugin: "com.diffplug.gradle.spotless"

	dependencyUpdates.resolutionStrategy {
		componentSelection { rules ->
			rules.all { ComponentSelection selection ->
				boolean rejected = [
					'alpha',
					'beta',
					'rc',
					'cr',
					'm',
					'preview'
				].any { qualifier ->
					selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
				}
				if (rejected) {
					selection.reject('Release candidate')
				}
			}
		}
	}

	spotless {
		java {
			target "**/*.java"
		}
		kotlin {
			target "**/*.kt"
			ktlint()
		}
		groovyGradle {
			target "*.gradle", "**/*.gradle"
			greclipse()
		}
	}

	repositories {
		google()
		mavenCentral()
		jcenter()
		mavenLocal()

		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
		options.deprecation = true
	}
}
